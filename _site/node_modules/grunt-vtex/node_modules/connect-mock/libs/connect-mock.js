(function() {
  var fs, path;

  path = require('path');

  fs = require('fs');

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return function(req, res, next) {
      var data, e, fileName, mockFilePath, requestPath, stat;
      requestPath = req.url.split('?')[0];
      mockFilePath = path.join(options.mockDirectory || 'mock/', requestPath);
      mockFilePath = mockFilePath.replace(/\/$/, '');
      try {
        data = '';
        stat = fs.lstatSync(mockFilePath);
        if (stat.isDirectory()) {
          fileName = mockFilePath.slice(mockFilePath.lastIndexOf('/'));
          mockFilePath = path.join(mockFilePath, fileName);
          data = fs.readFileSync(mockFilePath, 'utf8');
        } else {
          data = fs.readFileSync(mockFilePath, 'utf8');
        }
        if (options.verbose) {
          console.log('[connect-mock] end', mockFilePath);
        }
        return res.end(data);
      } catch (_error) {
        e = _error;
        if (options.verbose) {
          console.log('[connect-mock]', e);
        }
        return next();
      }
    };
  };

}).call(this);
